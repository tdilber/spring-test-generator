# ===================================================================
# Spring Boot configuration.
#
# This configuration is used for unit/integration tests.
#
# More information on profiles: https://www.jhipster.tech/profiles/
# More information on configuration properties: https://www.jhipster.tech/common-application-properties/
# ===================================================================

# ===================================================================
# Standard Spring Boot properties.
# Full reference is available at:
# http://docs.spring.io/spring-boot/docs/current/reference/html/common-application-properties.html
# ===================================================================

eureka:
  client:
    enabled: false
  instance:
    appname: test-gen-sample-app
    instanceId: test-gen-sample-app:${spring.application.instance-id:${random.value}}

spring:
  mvc:
    pathmatch:
      matching-strategy: ant-path-matcher
  profiles:
  # Uncomment the following line to enable tests against production database type rather than H2, using Testcontainers
  #active: testcontainers
  application:
    name: test-gen-sample-app
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:h2:mem:test-gen-sample-app;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
    name:
    username:
    password:
    hikari:
      auto-commit: false
  jackson:
    serialization:
      write-durations-as-timestamps: false
  jpa:
    database-platform: org.hibernate.dialect.H2Dialect
    open-in-view: false
    show-sql: true
    hibernate:
      ddl-auto: create
      naming:
        physical-strategy: org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
        implicit-strategy: org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy
    properties:
      hibernate.id.new_generator_mappings: true
      hibernate.connection.provider_disables_autocommit: true
      hibernate.cache.use_second_level_cache: false
      hibernate.cache.use_query_cache: false
      hibernate.generate_statistics: false
      hibernate.jdbc.time_zone: UTC
  data:
    elasticsearch:
      properties:
        path:
          home: target/elasticsearch
        # See https://github.com/jhipster/generator-jhipster/issues/10302
        node:
          max_local_storage_nodes: 2
  liquibase:
    contexts: test
  mail:
    host: localhost
  main:
    allow-circular-references: true
  messages:
    basename: i18n/messages
  task:
    execution:
      thread-name-prefix: test-gen-sample-app-task-
      pool:
        core-size: 1
        max-size: 50
        queue-capacity: 10000
    scheduling:
      thread-name-prefix: test-gen-sample-app-scheduling-
      pool:
        size: 1
  thymeleaf:
    mode: HTML

server:
  port: 10344
  address: localhost

# ===================================================================
# test-gen specific properties
# ===================================================================

test-gen:
  http:
    import:
      maxKiloBytesMultiPartFile: 2000002 # 2 GB
    export:
      entityListPageSize: 1002
      excelFlushToDiskSize: 1003
  clientApp:
    name: test-gen-sample-app
  message:
    sendingName: 'test-gen-SAMPLE'
    userName: 'test-gen-SAMPLE'
    smsKey: 'SMS KEY'
    mailSendingTime: '86400000' # 1 day to ms
  cache: # Cache configuration
    ehcache: # Ehcache configuration
      time-to-live-seconds: 3600 # By default objects stay 1 hour in the cache
      max-entries: 100 # Number of objects in each cache entry
  # CORS is only enabled by default with the "dev" profile, so BrowserSync can access the API
  cors:
    allowed-origins: '*'
    allowed-methods: '*'
    allowed-headers: '*'
    exposed-headers: 'Authorization,Link,X-Total-Count'
    allow-credentials: true
    max-age: 1800
  security:
    authentication:
      jwt:
        # This token must be encoded using Base64 and be at least 256 bits long (you can type `openssl rand -base64 64` on your command line to generate a 512 bits one)
        base64-secret: NzNkNjE3YjQxOTIyODAwZGU4OThhMWZjNDIxMWE1YTk4MGQ3MmQ3ODNkOTUwZTdiM2JkNjAxMzNmY2RiZDg0YzliMTRlZDIwZTNjYTQzYzNmYmYzODIwZTgxM2YyZmYyNGE4NzkxZmZjM2MyOThlNzkyZDYwYjExZWFlOTM3ZDg=
        # Token is valid 24 hours
        token-validity-in-seconds: 86400
        token-validity-in-seconds-for-remember-me: 2592000
  mail: # specific Maup4J mail property, for standard properties see MailProperties
    base-url: http://127.0.0.1:8080
  metrics:
    logs: # Reports metrics in the logs
      enabled: false
      report-frequency: 60 # in seconds
  logging:
    use-json-format: false # By default, logs are not in Json format
    logstash: # Forward logs to logstash over a socket, used by LoggingConfiguration
      enabled: false
      host: localhost
      port: 5000
      queue-size: 512
  audit-events:
    retention-period: 30 # Number of days before audit events are deleted.
kafka:
  bootstrap-servers: localhost:9092
  consumer:
    key.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value.deserializer: org.apache.kafka.common.serialization.StringDeserializer
    group.id: test-gen-sample-app
    auto.offset.reset: earliest
  producer:
    key.serializer: org.apache.kafka.common.serialization.StringSerializer
    value.serializer: org.apache.kafka.common.serialization.StringSerializer
# ===================================================================
# Application specific properties
# Add your own application properties here, see the ApplicationProperties class
# to have type-safe configuration, like in the JHipsterProperties above
#
# More documentation is available at:
# https://www.jhipster.tech/common-application-properties/
# ===================================================================

# application:
